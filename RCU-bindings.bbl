\begin{thebibliography}{10}

\bibitem{SrivatsaSBhat2014RCUrwlock}
{\sc Bhat, S.~S.}
\newblock percpu\_rwlock: Implement the core design of per-{CPU} reader-writer
  locks.
\newblock \url{https://patchwork.kernel.org/patch/2157401/}, February 2014.

\bibitem{MathieuDesnoyers2009URCU}
{\sc Desnoyers, M.}
\newblock [{RFC} git tree] userspace {RCU} (urcu) for {Linux}.
\newblock \url{http://liburcu.org}, February 2009.

\bibitem{MathieuDesnoyers2012URCU}
{\sc Desnoyers, M., McKenney, P.~E., Stern, A., Dagenais, M.~R., and Walpole,
  J.}
\newblock User-level implementations of read-copy update.
\newblock {\em IEEE Transactions on Parallel and Distributed Systems 23\/}
  (2012), 375--382.

\bibitem{MaxKhiszinsky2015C++RCU}
{\sc Khiszinsky, M.}
\newblock Lock-free data structures. the inside. rcu.
\newblock
  \url{https://kukuruku.co/post/lock-free-data-structures-the-inside-rcu/},
  February 2015.

\bibitem{RanLiu2014PassiveRWLock}
{\sc Liu, R., Zhang, H., and Chen, H.}
\newblock Scalable read-mostly synchronization using passive reader-writer
  locks.
\newblock In {\em 2014 USENIX Annual Technical Conference (USENIX ATC 14)\/}
  (Philadelphia, PA, June 2014), USENIX Association, pp.~219--230.

\bibitem{PaulMcKenney2013LWNURCU}
{\sc McKenney, P.~E., Desnoyers, M., and Jiangshan, L.}
\newblock User-space {RCU}.
\newblock \url{https://lwn.net/Articles/573424/}, November 2013.

\bibitem{PaulEMcKenney2015ReadMostly}
{\sc McKenney, P.~E., and Prasad, A.}
\newblock Recent read-mostly research in 2015.
\newblock \url{http://lwn.net/Articles/667593/}, December 2015.

\bibitem{McKenney98}
{\sc McKenney, P.~E., and Slingwine, J.~D.}
\newblock Read-copy update: Using execution history to solve concurrency
  problems.
\newblock In {\em {Parallel and Distributed Computing and Systems}\/} (Las
  Vegas, NV, October 1998), pp.~509--518.

\bibitem{PaulEMcKennneyToolKitP0232R0}
{\sc McKenney, P.~E., Wong, M., and Michael, M.}
\newblock P0232r0: A concurrency toolkit for structured deferral or optimistic
  speculation.
\newblock
  \url{http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0232r0.pdf},
  February 2016.

\bibitem{PedroRmalhete2015rwlockRCU}
{\sc Ramalhete, P.}
\newblock Implementing a reader-writer lock using rcu.
\newblock
  \url{http://concurrencyfreaks.blogspot.com/2015/10/implementing-reader-writer-lock-using.html},
  October 2015.

\bibitem{Sarma04c}
{\sc Sarma, D., and McKenney, P.~E.}
\newblock Making {RCU} safe for deep sub-millisecond response realtime
  applications.
\newblock In {\em Proceedings of the 2004 USENIX Annual Technical Conference
  (FREENIX Track)\/} (June 2004), USENIX Association, pp.~182--191.

\bibitem{GauthamShenoy2006RCUrwlock}
{\sc Shenoy, G.~R.}
\newblock [patch 4/5] lock\_cpu\_hotplug: Redesign - lightweight implementation
  of lock\_cpu\_hotplug.
\newblock Available: \url{http://lkml.org/lkml/2006/10/26/73} [Viewed January
  26, 2009], October 2006.

\end{thebibliography}
